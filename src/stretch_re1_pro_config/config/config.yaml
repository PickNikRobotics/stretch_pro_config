###############################################################
#
#  This configures the robot to work with MoveIt Pro
#
###############################################################

# Baseline hardware configuration parameters for MoveIt Pro.
# [Required]
hardware:
  # [Required]
  type: "re1"

  # Set simulated to false if you are using this as a configuration for real hardware.
  # Override-able by setting the $MOCK_HARDWARE environment variable to 'True'.
  # This allows users to switch between mock and real hardware using the same configuration.
  # [Required]
  simulated: ${MOCK_HARDWARE:-true}

  # If the MoveIt Pro Agent should launch the ros2 controller node.
  # [Optional, default=True]
  launch_control_node: True

  # If the MoveIt Pro Agent should launch the robot state publisher.
  # This should be false if you are launching the robot state publisher as part of drivers.
  # [Optional, default=True]
  launch_robot_state_publisher: True

  # If the MoveIt Pro Agent should launch cameras when simulated.
  # This must be False when using mock hardware, since there are no cameras simulated.
  # [Optional, default=True]
  launch_cameras_when_simulated: False

  # The robot's IP address.
  # [Required]
  ip: "0.0.0.0"

  # TODO - Add launch files for drivers
  # Specify additional launch files for running the robot with real hardware.
  # [Optional, defaults to a blank launch file if not specified]
  # robot_driver_persist_launch_file:
  #   package: "stretch_re1_pro_config"
  #   path: "launch/robot_drivers_to_persist.launch.py"
  # hardware_launch_file:
  #   package: "moveit_studio_agent"
  #   path: "launch/blank.launch.py"

  # Specify any additional launch files for running the robot in simulation mode.
  # Used when hardware.simulated is True.
  # [Optional, defaults to a blank launch file if not specified]
  # simulated_robot_driver_persist_launch_file:
  #   package: "stretch_re1_pro_config"
  #   path: "launch/sim/robot_drivers_to_persist_sim.launch.py"
  # simulated_hardware_launch_file:
  #   package: "moveit_studio_agent"
  #   path: "launch/blank.launch.py"

  # TODO - Add camera details
  # Configuration details for cameras and scene planning.
  # [Required]
  camera_config_file:
    package: "stretch_re1_pro_config"
    path: "config/cameras.yaml"

  # Parameters used to configure the robot description through XACRO.
  # A URDF and SRDF are both required.
  # [Required]
  robot_description:
    urdf:
      package: "stretch_re1_pro_config"
      path: "description/stretch.xacro"
    srdf:
      package: "stretch_re1_pro_config"
      path: "config/moveit/stretch.srdf"
    # Specify any additional parameters required for the URDF.
    # Many of these are specific to the UR descriptions packages, and can be customized as needed.
    # TODO - Look at URDF and set the right params
    # [Optional]
    urdf_params:
      - use_fake_controller: "true"
      # - robot_ip: "%>> hardware.ip"

# Sets ROS global params for launch.
# [Optional]
ros_global_params:
  # Whether or not to use simulated time.
  # [Optional, default=False]
  use_sim_time: False

# Configure additional, optional features in MoveIt Pro.
# [Optional]
optional_feature_params:
  # Whether or not to use the Formant bridge for over-the-internet comms.
  # [Optional, default=False]
  use_formant_bridge: False

# Configuration files for MoveIt.
# For more information, refer to https://moveit.picknik.ai/main/doc/how_to_guides/moveit_configuration/moveit_configuration_tutorial.html
# [Required]
moveit_params:
  # Used by the Waypoint Manager to save joint states from this joint group.
  joint_group_name: "stretch_arm"

  ompl_planning:
    package: "stretch_re1_pro_config"
    path: "config/moveit/ompl_planning.yaml"
  stomp_planning:
    package: "stretch_re1_pro_config"
    path: "config/moveit/stomp_planning.yaml"
  # pilz_planning:
  #   package: "stretch_re1_pro_config"
  #   path: "config/moveit/pilz_industrial_motion_planner_planning.yaml"
  kinematics:
    package: "stretch_re1_pro_config"
    path: "config/moveit/kinematics.yaml"
  servo:
    package: "stretch_re1_pro_config"
    path: "config/moveit/stretch_servo.yaml"
  sensors_3d:
    package: "stretch_re1_pro_config"
    path: "config/moveit/sensors_3d.yaml"
  servo_kinematics:
    package: "stretch_re1_pro_config"
    path: "config/moveit/trac_ik_kinematics_speed.yaml"
  joint_limits:
    package: "stretch_re1_pro_config"
    path: "config/moveit/joint_limits.yaml"
  servo_joint_limits:
    package: "stretch_re1_pro_config"
    path: "config/moveit/joint_limits.yaml"
  # pilz_cartesian_limits:
  #   package: "stretch_re1_pro_config"
  #   path: "config/moveit/pilz_cartesian_limits.yaml"

  publish:
    planning_scene: True
    geometry_updates: True
    state_updates: True
    transforms_updates: True

  trajectory_execution:
    manage_controllers: True
    allowed_execution_duration_scaling: 2.0
    allowed_goal_duration_margin: 5.0
    allowed_start_tolerance: 0.01

# Additional configurable parameters for the MoveIt Pro user interface.
# TODO - Find the right frame
# [Required]
ui_params:
  # By default, we use a frame named "grasp_link" for tool grasp pose rendering and planning.
  # [Required]
  servo_endpoint_frame_id: "grasp_link"

# Configuration for launching ros2_control processes.
# [Required, if using ros2_control]
ros2_control:
  config:
    package: "stretch_re1_pro_config"
    path: "config/control/stretch.ros2_control.yaml"
  # MoveIt Pro will load and activate these controllers at start up to ensure they are available.
  # If not specified, it is up to the user to ensure the appropriate controllers are active and available
  # for running the application.
  # [Optional, default=[]]
  controllers_active_at_startup:
    - "joint_state_broadcaster"
    - "diff_drive_controller"
    - "servo_controller"
  # Load but do not start these controllers so they can be activated later if needed.
  # [Optional, default=[]]
  controllers_inactive_at_startup:
    - "stretch_controller"
    - "stretch_base_controller"
  # Any controllers here will not be spawned by MoveIt Pro.
  # [Optional, default=[]]
  controllers_not_managed: []
  # Optionally configure remapping rules to let multiple controllers receive commands on the same topic.
  # [Optional, default=[]]
  controller_shared_topics: []

# Octomap manager configuration parameters
# TODO 
octomap_manager:
  # Input point cloud topic name. The *output* point cloud topic published by
  # the Octomap manager node is defined in sensors_3d.yaml.
  # input_point_cloud_topic: "/wrist_mounted_camera/depth/color/points"

# Configuration for loading behaviors and objectives.
# [Required]
objectives:
  # List of plugins for loading custom behaviors.
  # [Required]
  behavior_loader_plugins:
    # This plugin will load the core MoveIt Pro Behaviors.
    # Add additional plugin loaders as needed.
    core:
      - "moveit_studio::behaviors::CoreBehaviorsLoader"
      - "moveit_studio::behaviors::MTCCoreBehaviorsLoader"
      - "moveit_studio::behaviors::ServoBehaviorsLoader"
      - "moveit_studio::behaviors::VisionBehaviorsLoader"
  # Specify source folder for objectives
  # [Required]
  objective_library_paths:
    core:
      package_name: "stretch_re1_pro_config"
      relative_path: "objectives"
  # Specify the location of the saved waypoints file.
  # [Required]
  waypoints_file:
    package_name: "stretch_re1_pro_config"
    relative_path: "waypoints/stretch_waypoints.yaml"
